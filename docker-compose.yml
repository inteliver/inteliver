version: "3.8"

services:
  # inteliver:
  #   image: inteliver-api:latest
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"

  postgres:
    image: postgres:16
    container_name: postgres

    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-inteliver}

    volumes:
      - postgres_data:/var/lib/postgresql/data

    networks:
      - inteliver

    ports:
      - "127.0.0.1:5432:5432"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2024-07-26T20-48-21Z
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    volumes:
      - inteliver_minio_data:/data
    networks:
      - inteliver
    # labels:
      # - "traefik.enable=true"
      # - "traefik.http.routers.minio.rule=Host(`minio.local`)"
      # - "traefik.http.services.minio.loadbalancer.server.port=9000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # traefik:
  #   image: traefik:v2.9
  #   container_name: traefik
  #   command:
  #     - "--api.insecure=true"
  #     - "--providers.docker=true"
  #     - "--entrypoints.web.address=:80"
  #   ports:
  #     - "80:80"     # Expose Traefik API
  #     - "8080:8080" # Expose Traefik dashboard
  #   networks:
  #     - inteliver
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.traefik.rule=Host(`traefik.local`)"
  #     - "traefik.http.services.traefik.loadbalancer.server.port=8080"
  #   healthcheck:
  #     test: ["CMD", "curl", "--fail", "http://localhost:8080/ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

networks:
  inteliver:
    name: "inteliver"
    driver: bridge

volumes:
  postgres_data:
  inteliver_minio_data:
